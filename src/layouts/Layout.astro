---
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
<style is:global>
  :root {
    --color-primary: #fff;
    --color-negative-primary: #141414;
    --color-secondary: #727272;
    --color-accent: #ffd600;
    --color-muted-accent: #deba00;
    --background-color: var(--color-negative-primary);
    --scroll-margin-top: 40vh; /* Ajusta este valor según tus necesidades */
  }

  ::selection {
    background-color: var(--color-accent);
    color: var(--color-negative-primary);
  }
  ::-webkit-scrollbar {
    width: 10px; /* ancho del scrollbar */
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: #f1f1f1; /* color de fondo del track */
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: #888; /* color del thumb (el deslizador) */
  }

  /* Handle on hover */
  ::-webkit-scrollbar-thumb:hover {
    background: #555; /* color del thumb al pasar el ratón */
  }
  @font-face {
    font-family: Neue Metana;
    src: url("fonts/NeueMetana-Regular.woff2") format("woff2");
    font-weight: normal;
  }

  @font-face {
    font-family: Neue Metana;
    src: url("fonts/NeueMetana-SemiBold.woff2") format("woff2");
    font-weight: medium;
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
      transform: translateY(40px);
    }

    ,
    100% {
      opacity: 1;
      transform: translateY(0px);
    }
  }

  .fadeInAnimation {
    animation: fadeIn 3s;
  }

  html {
    height: 100%;
    font-family: Neue Metana;
    background: var(--background-color);
    color: var(--color-primary);
    scroll-snap-type: y mandatory;
    scroll-behavior: smooth;
  }

  section {
    scroll-snap-align: start;
  }

  body {
    scroll-margin-top: var(--scroll-margin-top);
  }

  .hiddenElement {
    opacity: 0;
    filter: blur(5px);
    transform: translateY(100px);
    transition: all 1.5s;
  }

  .fade {
    opacity: 1;
    filter: blur(0);
    transform: translateX(0);
    
  }
</style>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("fade");
      } else {
        entry.target.classList.remove("fade");
      }
    });
  });

  const hiddenElements = document.querySelectorAll(".hiddenElement");
  hiddenElements.forEach((el) => observer.observe(el));
</script>

